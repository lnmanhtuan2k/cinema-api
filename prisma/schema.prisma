// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  MANAGER
  ADMIN
}

enum ChairType {
  NORMAL
  VIP
  COUPLE
}

enum AuthProvider {
  LOCAL
  GOOGLE
}

model User {
  id                          String    @id @default(uuid()) @db.Uuid
  email                       String    @unique
  username                    String    @unique
  password                    String
  name                        String
  role                        Role      @default(USER)
  isVerified                  Boolean   @default(false)
  verificationToken           String?   @unique
  verificationTokenExpiresAt  DateTime?
  profilePicture              String?
  authProvider                AuthProvider  @default(LOCAL)
  bookings                    Booking[]
}



model Movie {
  id          String      @id @default(uuid()) @db.Uuid
  title       String
  description String
  duration    Int
  showtimes   Showtime[]
}

model Theater {
  id    String  @id @default(uuid()) @db.Uuid
  name  String
  rooms Room[]
}

model Room {
  id        String    @id @default(uuid()) @db.Uuid
  name      String
  theater   Theater   @relation(fields: [theaterId], references: [id])
  theaterId String    @db.Uuid
  showtimes Showtime[]
  chairs    Chair[]
}


model Showtime {
  id        String    @id @default(uuid()) @db.Uuid
  time      DateTime
  movie     Movie     @relation(fields: [movieId], references: [id])
  movieId   String    @db.Uuid
  room      Room      @relation(fields: [roomId], references: [id])
  roomId    String    @db.Uuid
  bookings  Booking[]
}

model Booking {
  id          String    @id @default(uuid()) @db.Uuid
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @db.Uuid
  showtime    Showtime  @relation(fields: [showtimeId], references: [id])
  showtimeId  String    @db.Uuid
}

model Chair {
  id       String    @id @default(uuid()) @db.Uuid
  code     String
  type     ChairType
  room     Room      @relation(fields: [roomId], references: [id])
  roomId   String    @db.Uuid
}